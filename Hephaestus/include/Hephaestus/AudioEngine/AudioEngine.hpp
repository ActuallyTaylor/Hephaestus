/*    AudioEngine.hpp    Zachary lineman    1/20/22        =================    DESCRIPTION    =================*/#ifndef OLYMPUS_AUDIOENGINE_HPP#define OLYMPUS_AUDIOENGINE_HPP#include <iostream>#include <string>#include <fstream>#include <map>#include <thread>#include <cstring>#include <AL/al.h>#include <Al/alc.h>#include "AudioSnippet.hpp"// Currently, only allows for one audio stream playback at a time.// Multiple buffers will be needed for multiple layer audio streaming.class AudioEngine {private:    ALCdevice *device;    ALCcontext *context;    std::map<std::string, AudioSnippet::AudioFile> loadedAudioData;    static char* loadWaveFile(std::string path, int& chan, int& sampleRate, int& bps, int& dataSize, unsigned int& format);    bool checkOpenALError(std::string caller);public:    AudioEngine();    ~AudioEngine();    AudioSnippet createAudioSnippet(std::string path);    void loadAudioFile(std::string path);    void removeAudioFile(std::string path);};#endif //OLYMPUS_AUDIOENGINE_HPP