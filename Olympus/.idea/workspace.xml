<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CMakeRunConfigurationManager" shouldGenerate="true" shouldDeleteObsolete="true">
    <generated>
      <config projectName="Olympus" targetName="Olympus" />
      <config projectName="Olympus" targetName="Hephaestus" />
      <config projectName="Olympus" targetName="common" />
      <config projectName="Olympus" targetName="openal-info" />
      <config projectName="Olympus" targetName="OpenAL" />
    </generated>
  </component>
  <component name="CMakeSettings" AUTO_RELOAD="true">
    <configurations>
      <configuration PROFILE_NAME="Debug" ENABLED="true" CONFIG_NAME="Debug" />
      <configuration PROFILE_NAME="Release" ENABLED="true" CONFIG_NAME="Release" />
    </configurations>
  </component>
  <component name="ChangeListManager">
    <list default="true" id="f22769bb-d6a0-46e4-a0f3-ebdc8ac76c3d" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/../GameOfLife/lib/hephaestus/include/Library/AudioFile.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/AudioFile.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/.travis.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/BSD-3Clause" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/CMakeLists.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/COPYING" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/XCompile-Android.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/XCompile.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/al/auxeffectslot.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/al/auxeffectslot.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/al/buffer.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/al/buffer.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/al/effect.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/al/effect.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/al/effects/autowah.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/al/effects/chorus.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/al/effects/compressor.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/al/effects/convolution.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/al/effects/dedicated.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/al/effects/distortion.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/al/effects/echo.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/al/effects/effects.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/al/effects/equalizer.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/al/effects/fshifter.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/al/effects/modulator.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/al/effects/null.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/al/effects/pshifter.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/al/effects/reverb.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/al/effects/vmorpher.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/al/error.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/al/event.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/al/event.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/al/extension.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/al/filter.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/al/filter.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/al/listener.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/al/listener.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/al/source.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/al/source.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/al/state.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/alc.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/alcmain.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/alconfig.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/alconfig.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/alcontext.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/alu.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/alu.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/async_event.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/backends/alsa.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/backends/alsa.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/backends/base.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/backends/base.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/backends/coreaudio.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/backends/coreaudio.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/backends/dsound.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/backends/dsound.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/backends/jack.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/backends/jack.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/backends/loopback.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/backends/loopback.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/backends/null.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/backends/null.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/backends/oboe.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/backends/oboe.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/backends/opensl.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/backends/opensl.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/backends/oss.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/backends/oss.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/backends/portaudio.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/backends/portaudio.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/backends/pulseaudio.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/backends/pulseaudio.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/backends/sdl2.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/backends/sdl2.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/backends/sndio.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/backends/sndio.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/backends/solaris.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/backends/solaris.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/backends/wasapi.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/backends/wasapi.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/backends/wave.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/backends/wave.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/backends/winmm.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/backends/winmm.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/bformatdec.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/bformatdec.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/buffer_storage.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/buffer_storage.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/compat.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/converter.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/converter.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/effects/autowah.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/effects/base.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/effects/chorus.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/effects/compressor.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/effects/convolution.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/effects/dedicated.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/effects/distortion.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/effects/echo.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/effects/equalizer.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/effects/fshifter.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/effects/modulator.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/effects/null.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/effects/pshifter.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/effects/reverb.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/effects/vmorpher.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/effectslot.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/effectslot.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/front_stablizer.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/helpers.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/hrtf.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/hrtf.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/inprogext.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/panning.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/uiddefs.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/voice.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/voice.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alc/voice_change.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/alsoftrc.sample" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/cmake/FindALSA.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/cmake/FindAudioIO.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/cmake/FindFFmpeg.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/cmake/FindJACK.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/cmake/FindMySOFA.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/cmake/FindOSS.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/cmake/FindOboe.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/cmake/FindOpenSL.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/cmake/FindPortAudio.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/cmake/FindPulseAudio.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/cmake/FindSDL2.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/cmake/FindSndFile.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/cmake/FindSoundIO.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/cmake/bin2h.script.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/common/albit.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/common/albyte.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/common/alcomplex.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/common/alcomplex.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/common/aldeque.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/common/alfstream.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/common/alfstream.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/common/almalloc.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/common/almalloc.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/common/alnumeric.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/common/aloptional.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/common/alspan.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/common/alstring.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/common/alstring.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/common/atomic.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/common/dynload.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/common/dynload.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/common/intrusive_ptr.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/common/math_defs.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/common/opthelpers.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/common/polyphase_resampler.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/common/polyphase_resampler.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/common/pragmadefs.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/common/ringbuffer.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/common/ringbuffer.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/common/strutils.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/common/strutils.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/common/threads.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/common/threads.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/common/vecmat.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/common/vector.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/common/win_main_utf8.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/config.h.in" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/core/ambdec.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/core/ambdec.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/core/ambidefs.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/core/bs2b.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/core/bs2b.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/core/bsinc_defs.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/core/bsinc_tables.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/core/bsinc_tables.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/core/bufferline.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/core/cpu_caps.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/core/cpu_caps.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/core/devformat.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/core/devformat.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/core/except.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/core/except.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/core/filters/biquad.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/core/filters/biquad.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/core/filters/nfc.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/core/filters/nfc.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/core/filters/splitter.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/core/filters/splitter.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/core/fmt_traits.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/core/fmt_traits.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/core/fpu_ctrl.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/core/fpu_ctrl.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/core/logging.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/core/logging.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/core/mastering.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/core/mastering.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/core/mixer/defs.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/core/mixer/hrtfbase.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/core/mixer/hrtfdefs.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/core/mixer/mixer_c.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/core/mixer/mixer_neon.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/core/mixer/mixer_sse.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/core/mixer/mixer_sse2.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/core/mixer/mixer_sse3.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/core/mixer/mixer_sse41.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/core/uhjfilter.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/core/uhjfilter.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/hrtf/Default HRTF.mhr" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/include/AL/al.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/include/AL/alc.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/include/AL/alext.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/include/AL/efx-creative.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/include/AL/efx-presets.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/include/AL/efx.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/openal.pc.in" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/presets/3D7.1.ambdec" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/presets/hexagon.ambdec" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/presets/itu5.1-nocenter.ambdec" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/presets/itu5.1.ambdec" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/presets/presets.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/presets/rectangle.ambdec" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/presets/square.ambdec" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/resources/openal32.rc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/resources/resource.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/resources/router.rc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/resources/soft_oal.rc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/router/al.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/router/alc.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/router/router.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/router/router.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/utils/CIAIR.def" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/utils/IRC_1005.def" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/utils/MIT_KEMAR.def" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/utils/MIT_KEMAR_sofa.def" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/utils/SCUT_KEMAR.def" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/utils/alsoft-config/CMakeLists.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/utils/alsoft-config/main.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/utils/alsoft-config/mainwindow.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/utils/alsoft-config/mainwindow.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/utils/alsoft-config/mainwindow.ui" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/utils/alsoft-config/verstr.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/utils/alsoft-config/verstr.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/utils/getopt.c" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/utils/getopt.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/utils/makemhr/loaddef.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/utils/makemhr/loaddef.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/utils/makemhr/loadsofa.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/utils/makemhr/loadsofa.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/utils/makemhr/makemhr.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/utils/makemhr/makemhr.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/utils/openal-info.c" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/utils/sofa-info.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/utils/sofa-support.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/utils/sofa-support.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/version.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Hephaestus/Library/openal-soft/version.h.in" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Resources/Audio/test.wav" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../GameOfLife/cmake-build-debug/CMakeFiles/GameOfLife.dir/CXX.includecache" beforeDir="false" afterPath="$PROJECT_DIR$/../GameOfLife/cmake-build-debug/CMakeFiles/GameOfLife.dir/CXX.includecache" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../GameOfLife/cmake-build-debug/CMakeFiles/GameOfLife.dir/depend.internal" beforeDir="false" afterPath="$PROJECT_DIR$/../GameOfLife/cmake-build-debug/CMakeFiles/GameOfLife.dir/depend.internal" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../GameOfLife/cmake-build-debug/CMakeFiles/GameOfLife.dir/depend.make" beforeDir="false" afterPath="$PROJECT_DIR$/../GameOfLife/cmake-build-debug/CMakeFiles/GameOfLife.dir/depend.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../GameOfLife/cmake-build-debug/CMakeFiles/GameOfLife.dir/main.cpp.o" beforeDir="false" afterPath="$PROJECT_DIR$/../GameOfLife/cmake-build-debug/CMakeFiles/GameOfLife.dir/main.cpp.o" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../GameOfLife/cmake-build-debug/GameOfLife" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../GameOfLife/lib/hephaestus/include/AudioEngine/AudioEngine.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/../GameOfLife/lib/hephaestus/include/AudioEngine/AudioEngine.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../GameOfLife/lib/hephaestus/lib/libHephaestus.a" beforeDir="false" afterPath="$PROJECT_DIR$/../GameOfLife/lib/hephaestus/lib/libHephaestus.a" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Hephaestus/AudioEngine/AudioEngine.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/Hephaestus/AudioEngine/AudioEngine.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Hephaestus/AudioEngine/AudioEngine.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/Hephaestus/AudioEngine/AudioEngine.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Hephaestus/CMakeLists.txt" beforeDir="false" afterPath="$PROJECT_DIR$/Hephaestus/CMakeLists.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeCache.txt" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeCache.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/CMakeError.log" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/CMakeError.log" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/CMakeOutput.log" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/CMakeOutput.log" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Makefile.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Makefile.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Makefile2" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Makefile2" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Olympus.dir/CXX.includecache" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Olympus.dir/CXX.includecache" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Olympus.dir/DependInfo.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Olympus.dir/DependInfo.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Olympus.dir/build.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Olympus.dir/build.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Olympus.dir/depend.internal" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Olympus.dir/depend.internal" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Olympus.dir/depend.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Olympus.dir/depend.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Olympus.dir/flags.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Olympus.dir/flags.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Olympus.dir/link.txt" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Olympus.dir/link.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Olympus.dir/main.cpp.o" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Olympus.dir/main.cpp.o" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Olympus.dir/progress.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Olympus.dir/progress.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/TargetDirectories.txt" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/TargetDirectories.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/clion-log.txt" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/clion-log.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/progress.marks" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/progress.marks" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/Hephaestus/CMakeFiles/Hephaestus.dir/CXX.includecache" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/Hephaestus/CMakeFiles/Hephaestus.dir/CXX.includecache" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/Hephaestus/CMakeFiles/Hephaestus.dir/depend.internal" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/Hephaestus/CMakeFiles/Hephaestus.dir/depend.internal" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/Hephaestus/CMakeFiles/Hephaestus.dir/depend.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/Hephaestus/CMakeFiles/Hephaestus.dir/depend.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/Hephaestus/CMakeFiles/Hephaestus.dir/progress.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/Hephaestus/CMakeFiles/Hephaestus.dir/progress.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/Hephaestus/CMakeFiles/progress.marks" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/Hephaestus/CMakeFiles/progress.marks" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/Hephaestus/Hephaestus.cbp" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/Hephaestus/Hephaestus.cbp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/Hephaestus/Makefile" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/Hephaestus/Makefile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/Hephaestus/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/Hephaestus/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/Makefile" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/Makefile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/Olympus.cbp" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/Olympus.cbp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/Testing/Temporary/LastTest.log" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/Testing/Temporary/LastTest.log" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-release/CMakeCache.txt" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-release/CMakeCache.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-release/CMakeFiles/Makefile.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-release/CMakeFiles/Makefile.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-release/CMakeFiles/Makefile2" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-release/CMakeFiles/Makefile2" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-release/CMakeFiles/Olympus.dir/DependInfo.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-release/CMakeFiles/Olympus.dir/DependInfo.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-release/CMakeFiles/Olympus.dir/build.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-release/CMakeFiles/Olympus.dir/build.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-release/CMakeFiles/Olympus.dir/flags.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-release/CMakeFiles/Olympus.dir/flags.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-release/CMakeFiles/Olympus.dir/link.txt" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-release/CMakeFiles/Olympus.dir/link.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-release/CMakeFiles/Olympus.dir/progress.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-release/CMakeFiles/Olympus.dir/progress.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-release/CMakeFiles/TargetDirectories.txt" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-release/CMakeFiles/TargetDirectories.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-release/CMakeFiles/clion-log.txt" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-release/CMakeFiles/clion-log.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-release/CMakeFiles/progress.marks" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-release/CMakeFiles/progress.marks" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-release/Hephaestus/CMakeFiles/Hephaestus.dir/progress.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-release/Hephaestus/CMakeFiles/Hephaestus.dir/progress.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-release/Hephaestus/CMakeFiles/progress.marks" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-release/Hephaestus/CMakeFiles/progress.marks" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-release/Hephaestus/Hephaestus.cbp" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-release/Hephaestus/Hephaestus.cbp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-release/Hephaestus/Makefile" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-release/Hephaestus/Makefile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-release/Hephaestus/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-release/Hephaestus/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-release/Makefile" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-release/Makefile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-release/Olympus.cbp" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-release/Olympus.cbp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/main.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/main.cpp" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ClangdSettings">
    <option name="formatViaClangd" value="false" />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="CMakeBuildProfile:Debug" />
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="CMakeLists.txt" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="GitSEFilterConfiguration">
    <file-type-list>
      <filtered-out-file-type name="LOCAL_BRANCH" />
      <filtered-out-file-type name="REMOTE_BRANCH" />
      <filtered-out-file-type name="TAG" />
      <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
    </file-type-list>
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file:///Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/vector" root0="FORCE_HIGHLIGHTING" />
    <setting file="file:///Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/__string" root0="FORCE_HIGHLIGHTING" />
  </component>
  <component name="ProjectId" id="20KCL6BxFflAbGZyf9BMoLUeJZC" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="ASKED_ADD_EXTERNAL_FILES" value="true" />
    <property name="ASKED_MARK_IGNORED_FILES_AS_EXCLUDED" value="true" />
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="RunOnceActivity.cidr.known.project.marker" value="true" />
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="cf.first.check.clang-format" value="false" />
    <property name="cidr.known.project.marker" value="true" />
    <property name="cmake.loaded.for.project" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/cmake-build-debug" />
    <property name="nodejs.jest.jest_package" value="" />
    <property name="nodejs_package_manager_path" value="npm" />
    <property name="settings.editor.selected.configurable" value="CMakeSettings" />
  </component>
  <component name="ReaderModeSettings">
    <option name="enabled" value="false" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/cmake-build-debug" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/Resources/Audio" />
      <recent name="$PROJECT_DIR$/Hephaestus/Library/AL" />
      <recent name="$PROJECT_DIR$/Hephaestus/Library/freealut" />
      <recent name="$PROJECT_DIR$/Hephaestus/Library" />
      <recent name="$PROJECT_DIR$/Hephaestus/Library/irrKlang/lib" />
    </key>
  </component>
  <component name="RunManager" selected="CMake Application.Olympus">
    <configuration default="true" type="CLionExternalRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true">
      <method v="2">
        <option name="CLION.EXTERNAL.BUILD" enabled="true" />
      </method>
    </configuration>
    <configuration name="Hephaestus" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Olympus" TARGET_NAME="Hephaestus" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Olympus" RUN_TARGET_NAME="Olympus">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Olympus" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Olympus" RUN_TARGET_NAME="Olympus" EXPLICIT_BUILD_TARGET_NAME="all">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="OpenAL" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Olympus" TARGET_NAME="OpenAL" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="common" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Olympus" TARGET_NAME="common" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="openal-info" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Olympus" TARGET_NAME="openal-info" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Olympus" RUN_TARGET_NAME="openal-info">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="GradleAppRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true">
      <method v="2">
        <option name="com.jetbrains.cidr.cpp.gradle.execution.GradleNativeBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Copy Directory" type="ShConfigurationType">
      <option name="SCRIPT_TEXT" value="rsync  $PROJECT_DIR$/Hephaestus/ $PROJECT_DIR$/../GameOfLife/lib/hephaestus/include/ -v -r --include &quot;*.hpp&quot; --include &quot;*.h&quot; --include &quot;*/&quot;  --exclude &quot;*&quot; " />
      <option name="INDEPENDENT_SCRIPT_PATH" value="true" />
      <option name="SCRIPT_PATH" value="" />
      <option name="SCRIPT_OPTIONS" value="" />
      <option name="INDEPENDENT_SCRIPT_WORKING_DIRECTORY" value="true" />
      <option name="SCRIPT_WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="INDEPENDENT_INTERPRETER_PATH" value="true" />
      <option name="INTERPRETER_PATH" value="/bin/zsh" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="EXECUTE_IN_TERMINAL" value="true" />
      <option name="EXECUTE_SCRIPT_FILE" value="false" />
      <envs />
      <method v="2" />
    </configuration>
    <configuration name="Copy .a" type="ShConfigurationType">
      <option name="SCRIPT_TEXT" value="cp $PROJECT_DIR$/cmake-build-debug/Hephaestus/libHephaestus.a $PROJECT_DIR$/../GameOfLife/lib/hephaestus/lib/libHephaestus.a" />
      <option name="INDEPENDENT_SCRIPT_PATH" value="true" />
      <option name="SCRIPT_PATH" value="" />
      <option name="SCRIPT_OPTIONS" value="" />
      <option name="INDEPENDENT_SCRIPT_WORKING_DIRECTORY" value="true" />
      <option name="SCRIPT_WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="INDEPENDENT_INTERPRETER_PATH" value="true" />
      <option name="INTERPRETER_PATH" value="/bin/zsh" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="EXECUTE_IN_TERMINAL" value="true" />
      <option name="EXECUTE_SCRIPT_FILE" value="false" />
      <envs />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="CMake Application.Olympus" />
      <item itemvalue="CMake Application.Hephaestus" />
      <item itemvalue="CMake Application.common" />
      <item itemvalue="CMake Application.OpenAL" />
      <item itemvalue="CMake Application.openal-info" />
      <item itemvalue="Shell Script.Copy Directory" />
      <item itemvalue="Shell Script.Copy .a" />
    </list>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="f22769bb-d6a0-46e4-a0f3-ebdc8ac76c3d" name="Changes" comment="" />
      <created>1635783832273</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1635783832273</updated>
      <workItem from="1635783833793" duration="1862000" />
      <workItem from="1635789700915" duration="780000" />
      <workItem from="1635868409949" duration="2633000" />
      <workItem from="1635942969427" duration="10739000" />
      <workItem from="1636070391549" duration="5582000" />
      <workItem from="1636076395243" duration="1786000" />
      <workItem from="1636078268938" duration="1000" />
      <workItem from="1636081531586" duration="790000" />
      <workItem from="1636115324032" duration="27000" />
      <workItem from="1636122033684" duration="6948000" />
      <workItem from="1636389398938" duration="4138000" />
      <workItem from="1636485847659" duration="225000" />
      <workItem from="1636562336866" duration="5929000" />
      <workItem from="1636649216465" duration="3356000" />
      <workItem from="1636735441542" duration="7466000" />
      <workItem from="1636820589373" duration="29605000" />
      <workItem from="1636978592740" duration="321000" />
      <workItem from="1636987082477" duration="91000" />
      <workItem from="1636994336705" duration="6942000" />
      <workItem from="1637081600049" duration="14631000" />
      <workItem from="1637204361766" duration="7259000" />
      <workItem from="1637247198861" duration="985000" />
      <workItem from="1637253357263" duration="4007000" />
      <workItem from="1637339471246" duration="4779000" />
      <workItem from="1637435462999" duration="12535000" />
      <workItem from="1637552529424" duration="133000" />
      <workItem from="1637552666411" duration="7868000" />
      <workItem from="1637689030898" duration="3911000" />
      <workItem from="1637705625820" duration="541000" />
      <workItem from="1638200823358" duration="288000" />
      <workItem from="1638380078716" duration="898000" />
      <workItem from="1638463165829" duration="2498000" />
      <workItem from="1638540202578" duration="1559000" />
      <workItem from="1638549653523" duration="13090000" />
      <workItem from="1638808785409" duration="1230000" />
      <workItem from="1638896068432" duration="9242000" />
      <workItem from="1638974883532" duration="383000" />
      <workItem from="1638976617282" duration="3500000" />
      <workItem from="1638982738417" duration="6327000" />
      <workItem from="1639057004539" duration="1726000" />
      <workItem from="1639068013982" duration="5503000" />
      <workItem from="1639154518360" duration="3053000" />
      <workItem from="1639414353466" duration="538000" />
      <workItem from="1639490423078" duration="2329000" />
      <workItem from="1639500974191" duration="776000" />
      <workItem from="1639517717728" duration="947000" />
      <workItem from="1639587493580" duration="3000" />
      <workItem from="1639587504714" duration="707000" />
      <workItem from="1639588244421" duration="1747000" />
      <workItem from="1639603930675" duration="2356000" />
      <workItem from="1639672659481" duration="2795000" />
      <workItem from="1639760597404" duration="3462000" />
      <workItem from="1639860732462" duration="347000" />
      <workItem from="1639874475230" duration="2228000" />
      <workItem from="1639876771363" duration="3000" />
      <workItem from="1639969381154" duration="949000" />
      <workItem from="1639971880446" duration="1000" />
      <workItem from="1639971914693" duration="1280000" />
      <workItem from="1640006881460" duration="60000" />
      <workItem from="1640019652756" duration="1013000" />
      <workItem from="1640020919918" duration="559000" />
      <workItem from="1640032744666" duration="3232000" />
      <workItem from="1640061497557" duration="1768000" />
      <workItem from="1641227918645" duration="2608000" />
      <workItem from="1641314451016" duration="1786000" />
      <workItem from="1641316323798" duration="862000" />
      <workItem from="1641317191022" duration="2000" />
      <workItem from="1641322215343" duration="944000" />
      <workItem from="1641400741088" duration="79000" />
      <workItem from="1641401515352" duration="3555000" />
      <workItem from="1641436196345" duration="45000" />
      <workItem from="1641487503637" duration="2025000" />
      <workItem from="1641501301646" duration="46000" />
      <workItem from="1641575571797" duration="1857000" />
      <workItem from="1641585062734" duration="46000" />
      <workItem from="1641832828043" duration="1344000" />
      <workItem from="1641930690639" duration="843000" />
      <workItem from="1642005475505" duration="5942000" />
      <workItem from="1642037264940" duration="192000" />
      <workItem from="1642093246816" duration="328000" />
      <workItem from="1642525025015" duration="1121000" />
      <workItem from="1642698427709" duration="1722000" />
      <workItem from="1642783133356" duration="3447000" />
      <workItem from="1643042840719" duration="1712000" />
      <workItem from="1643129685928" duration="3118000" />
      <workItem from="1643215058904" duration="1994000" />
      <workItem from="1643339079816" duration="469000" />
      <workItem from="1643467651288" duration="294000" />
      <workItem from="1643478654810" duration="3801000" />
      <workItem from="1643648280470" duration="995000" />
      <workItem from="1643661156878" duration="614000" />
      <workItem from="1643855308693" duration="18000" />
      <workItem from="1644340629821" duration="1232000" />
      <workItem from="1644597566770" duration="2697000" />
      <workItem from="1644634736978" duration="95000" />
      <workItem from="1644856819694" duration="666000" />
      <workItem from="1644858230108" duration="1140000" />
      <workItem from="1644859395151" duration="192000" />
      <workItem from="1644944158451" duration="2231000" />
      <workItem from="1645029526178" duration="4227000" />
      <workItem from="1645055653490" duration="541000" />
      <workItem from="1645116274170" duration="5626000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
    <option name="oldMeFiltersMigrated" value="true" />
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
    <ignored-roots>
      <path value="$PROJECT_DIR$/../.." />
    </ignored-roots>
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
</project>